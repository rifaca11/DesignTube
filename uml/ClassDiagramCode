@startuml
class User {
  +username: string
  +email: string
  +password: string
  +createAccount(): void
  +logIn(): void
  +updateProfile(): void
  +deleteAccount(): void
  +search(keyword: string): Video[]
}

class Role{
  +roleName: string
}

class Video {
  +title: string
  +description: string
  +url: string
  +uploadDate: Date
  +views: int
  +likes: int
  +dislikes: int
  +tags: string[]
  +comments: Comment[]
  +upload(user: User): void
  +delete(user: User): void
  +edit(user: User): void
  +view(): void
  +like(user: User): void
  +dislike(user: User): void
  +addComment(comment: Comment): void
  +removeComment(comment: Comment): void
}

class Comment {
  +text: string
  +author: User
  +likes: int
  +dislikes: int
  +date: Date
  +replyTo: Comment
  +replies: Comment[]
  +addReply(reply: Comment): void
  +deleteReply(reply: Comment): void
  +like(user: User): void
  +dislike(user: User): void
}

class Channel {
  +name: string
  +description: string
  +owner: User
  +videos: Video[]
  +subscribers: User[]
  +subscribe(user: User): void
  +unsubscribe(user: User): void
  +addVideo(video: Video): void
  +removeVideo(video: Video): void
  +editVideo(video: Video): void
  +viewChannel(): void
}

class Playlist {
  +name: string
  +description: string
  +videos: Video[]
  +owner: User
  +addVideo(video: Video): void
  +removeVideo(video: Video): void
  +edit(): void
}

User --* Role : has
User *-- Comment : comments
Video *-- Comment : has
User *-- Channel : owns
User *-- Channel : subscribes
Channel *-- Video : has
Channel *-- Playlist : creates
Playlist *-- Video : has

@enduml
